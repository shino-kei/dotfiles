[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = [ 'nvim-yarp', 'vim-hug-neovim-rpc', 'context_filetype.vim' ]
on_i = 1
hook_source = '''
    call deoplete#enable()
    let g:deoplete#enable_at_startup = 1

    " No display of the number of competion list
    set shortmess+=c

    " <TAB>: completion.
    inoremap <silent><expr> <TAB>
          \ pumvisible() ? "\<C-n>" :
          \ <SID>check_back_space() ? "\<TAB>" :
          \ deoplete#manual_complete()
    function! s:check_back_space() abort
      let col = col('.') - 1
      return !col || getline('')[col - 1]  =~ '\s'
    endfunction

    " <S-TAB>: completion back.
    inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
    " <C-e>: popup cancel
    inoremap <expr><C-e>       deoplete#cancel_popup()

    call deoplete#custom#source('_', 'matchers', ['matcher_head'])
    call deoplete#custom#source('_', 'converters', [
          \ 'converter_remove_paren',
          \ 'converter_remove_overlap',
          \ 'matcher_length',
          \ 'converter_truncate_abbr',
          \ 'converter_truncate_menu',
          \ 'converter_auto_delimiter',
          \ ])
    call deoplete#custom#option('keyword_patterns', {
          \ '_': '[a-zA-Z_]\k*\(?',
          \ 'tex': '[^\w|\s][a-zA-Z_]\w*',
          \ })
    call deoplete#custom#option('camel_case', v:true)
'''


[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']

# pythonの入力補完
[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_add = '''
  let g:jedi#completions_command = "<C-n>"
  let g:jedi#use_tabs_not_buffers = 1 
  let g:jedi#popup_select_first = 0 
  autocmd FileType python setlocal completeopt-=preview
'''

[[plugins]]
repo = 'ervandew/supertab'
hook_add = '''
  let g:SuperTabContextDefaultCompletionType = "context"
  let g:SuperTabDefaultCompletionType = "<C-n>"
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']
